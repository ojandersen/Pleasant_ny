---
const url = "https://cyfoyamibtncrcptfnyz.supabase.co/rest/v1/pleasantprodukter";
const key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImN5Zm95YW1pYnRuY3JjcHRmbnl6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDUzMTQ1ODAsImV4cCI6MjA2MDg5MDU4MH0.61IR-M8WjxJ7_Oneju-ZBWnPIAlswSek42aMvJGgPbg";
const options = {
  headers: {
    apikey: key,
  },
};
let data = await fetch(url, options).then((res) => res.json());
console.log(data);
---

<div class="ooak"><img src="./ooak.png" alt="one of a kind" /></div>
<section class="flex_container">
  <div class="filter-sidebar">
    <h2>Filtrer produkter</h2>

    <!-- Størrelse Filter -->
    <section class="kategori">
      <div class="filter-group">
        <h3 class="filter-toggle">Størrelse</h3>
        <ul class="filter-list">
          {
            ["Small", "Medium", "Large"].map((size) => (
              <li>
                <input type="checkbox" id={size} name="size" value={size} />
                <label for={size}>{size}</label>
              </li>
            ))
          }
        </ul>
      </div>

      <!-- Style Filter -->
      <div class="filter-group">
        <h3 class="filter-toggle">Style</h3>
        <ul class="filter-list">
          {
            ["Casual", "Formal", "Sporty"].map((style) => (
              <li>
                <input type="checkbox" id={style} name="style" value={style} />
                <label for={style}>{style}</label>
              </li>
            ))
          }
        </ul>
      </div>

      <!-- Farve Filter -->
      <div class="filter-group">
        <h3 class="filter-toggle">Farve</h3>
        <ul class="filter-list">
          {
            ["Red", "Blue", "Green", "Black", "White"].map((color) => (
              <li>
                <input type="checkbox" id={color} name="color" value={color} />
                <label for={color}>{color}</label>
              </li>
            ))
          }
        </ul>
      </div>

      <!-- Mønster Filter -->
      <div class="filter-group">
        <h3 class="filter-toggle">Mønster</h3>
        <ul class="filter-list">
          {
            ["Plain", "Striped", "Checked"].map((pattern) => (
              <li>
                <input type="checkbox" id={pattern} name="pattern" value={pattern} />
                <label for={pattern}>{pattern}</label>
              </li>
            ))
          }
        </ul>
      </div>
    </section>
  </div>
  <section class="cards_flex">
    {
      data.map((product) => (
        <article class="card">
          <a href="/swpleasant">
            <img src={product.image_URL} alt={product.productname} class="card-image" />
          </a>
          <div class="card-content">
            <h3>{product.productname}</h3>
            <p>{product.price} kr</p>
          </div>
          <button class="add-to-cart">Tilføj til kurv</button>
        </article>
      ))
    }
  </section>
</section>
<style>
  html {
    background-color: #f2f0e8;
    max-width: 100%;
    box-sizing: border-box;
    margin: 0 auto;
    padding: 0;
  }

  h2,
  h3,
  p {
    font-family: "new-spirit", serif;
  }

  h3 {
    font-weight: 400;
    font-style: normal;
  }

  button {
    font-family: "new-spirit", serif;
    font-weight: 400;
    font-style: normal;
  }

  .ooak {
    display: flex;
    position: relative;
    justify-content: center;
  }
  .ooak img {
    width: 15%;
  }
  /* Sidebar Styling */

  .filter-sidebar {
    width: 20%;
    padding: 1rem;
    background-color: #f2f0e8;
    overflow-y: auto;
  }

  /* Filtergruppe og linjer */
  .filter-group {
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #ddd;
  }

  .filter-group h3 {
    font-size: 1.1rem;

    cursor: pointer;
  }

  /* Skjult indhold */
  .filter-list {
    list-style-type: none;
    padding: 0;
    display: none;
    margin-top: 10px;
  }

  .filter-group.open .filter-list {
    display: block;
  }

  .filter-group li {
    margin-bottom: 0.5rem;
  }

  .filter-group input {
    margin-right: 0.5rem;
  }
  /* SECTION FLEX */
  section.flex_container {
    display: flex;
    width: 100vw;
  }
  /*NY SEKTION*/
  section .cards_flex {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    width: 100%;
    padding-top: 30px;
  }
  .card {
    position: relative;
    display: grid;
    grid-template-columns: 1fr;
    overflow: hidden;
    max-width: 100%;
    text-align: center;
    border: 2px solid transparent;
    padding: 0.5rem;
  }

  .card-image {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  .card-content {
    text-align: center;
  }

  .card-description {
    font-size: 1rem;
    color: #090808;
    margin-bottom: 1rem;
  }

  .card-price {
    font-size: 1.2rem;
  }

  .card:hover {
    border: 2px solid #090808;
    overflow: hidden;
  }
  .add-to-cart {
    position: absolute;
    bottom: 125px;
    left: 10px;
    right: 10px;
    display: none;
    background-color: #f2f0e8;
    border: 1px solid black;
    padding: 0.5rem 1rem;
    font-size: 1rem;

    text-align: center;
    cursor: pointer;
  }

  .card:hover .add-to-cart {
    display: block;
  }

  @media (min-width: 429px) {
    .add-to-cart {
      display: block;
    }
  }

  .add-to-cart {
    display: none;
    background-color: #f2f0e8;
    border: 1px solid black;
    padding: 0.5rem 1rem;
    font-size: 1rem;

    text-align: center;
    cursor: pointer;
  }

  .card:hover .add-to-cart {
    display: block;
  }
  @media (width <= 812px) {
    section.flex_container {
      display: block;
    }
    .filter-sidebar {
      width: 90%;
    }

    .kategori {
      display: flex;
      justify-content: space-between;
    }
    .filter-group {
      grid-row: 2;
    }
  }
  @media (max-width: 428px) {
    .artikel_oversrkift {
      font-size: 2rem;
      padding-top: 10rem;
    }
    .add-to-cart {
      display: block;
    }

    .card:hover .add-to-cart {
      display: block;
    }
  }
</style>
<script>
  document.querySelectorAll(".filter-toggle").forEach((item) => {
    item.addEventListener("click", () => {
      const parent = item.parentElement;
      parent.classList.toggle("open");
    });
  });
</script>
